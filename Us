import pyodbc
import csv
import requests
import json

# Define the function to export audit logs
def exportAuditLogs():
    # ODBC connection string to connect to the database
    connection_string = 'DRIVER={SQL Server};SERVER=your_server_name;DATABASE=netsparker;UID=your_username;PWD=your_password'
    
    # Establish a connection
    conn = pyodbc.connect(connection_string)
    
    # Create a cursor object
    cursor = conn.cursor()

    # SQL Query to get user logs and roles
    query = """
    SELECT C.name, C.email,
           (SELECT TOP 1 D.name 
            FROM Roles D 
            JOIN UserRolewebsiteGroupMappings E 
            ON D.Id=E.RoleID 
            WHERE C.Id=E.UserId) AS Role,
           B.Name, B.value, B.CreatedAt
    FROM Useractions A
    JOIN Useractionparameters B ON A.Id=B.userAction_Id
    JOIN users C ON A.userId=C.Id;
    """

    # Execute the query
    cursor.execute(query)
    
    # Fetch all results
    rows = cursor.fetchall()

    # Define a CSV file path
    csv_file_path = "audit_logs.csv"

    # Write the results to a CSV file
    with open(csv_file_path, 'w', newline='') as csvfile:
        writer = csv.writer(csvfile)
        # Write header
        writer.writerow([i[0] for i in cursor.description])  # Writing column headers
        # Write data
        writer.writerows(rows)
    
    print(f"Audit logs have been exported to {csv_file_path}")

    # After exporting the logs, call Netsparker Enterprise API for additional operations if needed
    call_netsparker_api(csv_file_path)

    # Close the connection
    conn.close()

# Define a function to interact with the Netsparker Enterprise API
def call_netsparker_api(file_path):
    # Sample API call to upload or process the audit logs
    api_url = "https://www.netsparkercloud.com/api/1.0/resource/endpoint"  # Replace with actual API endpoint
    headers = {
        "Authorization": "Bearer your_api_token",
        "Content-Type": "application/json"
    }

    # Example of a POST request with a JSON payload
    with open(file_path, 'rb') as f:
        files = {'file': f}
        response = requests.post(api_url, headers=headers, files=files)

    # Check response status
    if response.status_code == 200:
        print("Logs successfully sent to Netsparker Enterprise API.")
    else:
        print(f"Failed to send logs. Status Code: {response.status_code}, Response: {response.text}")

# Run the export function
if __name__ == "__main__":
    exportAuditLogs()
